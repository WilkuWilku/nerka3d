package pl.ee.nerkabackend.webservice.controller;

import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import pl.ee.nerkabackend.exception.DataLoadingException;
import pl.ee.nerkabackend.processing.DataLoader;
import pl.ee.nerkabackend.processing.methods.MethodTypes;
import pl.ee.nerkabackend.processing.methods.visualisation.Triangulation;
import pl.ee.nerkabackend.processing.model.Layer;
import pl.ee.nerkabackend.processing.model.LayerPoint;
import pl.ee.nerkabackend.processing.model.triangulation.Triangle;
import pl.ee.nerkabackend.processing.service.KidneyProcessingService;
import pl.ee.nerkabackend.processing.service.LayerProcessingService;

import java.io.IOException;
import java.util.*;
import java.util.stream.Collectors;
import java.util.stream.Stream;

@RestController
@Slf4j
public class TestController {

    @Autowired
    private KidneyProcessingService kidneyProcessingService;

    @Autowired
    private Triangulation triangulation;

    @Autowired
    private LayerProcessingService layerProcessingService;

    @Autowired
    private DataLoader dataLoader;

    @GetMapping("/border")
    private List<LayerPoint> getBorder() throws DataLoadingException, IOException {
        List<String> layersToLoad = List.of(
                "/ct17b/ct17b_kidney_4-0.ctl");
        var data = dataLoader.loadKidneyDataFromLocalFile(layersToLoad.get(0));
        return layerProcessingService.getPoints(data);
    }

    @PostMapping(value = "/bordersFromFiles", consumes = MediaType.MULTIPART_FORM_DATA_VALUE)
    private List<LayerPoint> getBordersFromFiles(@RequestParam("files") MultipartFile[] files) {
        return Arrays.stream(files).map(file -> {
            try {
                return dataLoader.loadKidneyDataFromUploadedFile(file);
            } catch (IOException | DataLoadingException e) {
                e.printStackTrace();
            }
            return null;
        })
                .filter(Objects::nonNull)
//                .map(rawLayer -> layerProcessingService.getPoints(rawLayer))
                .map(rawLayer -> layerProcessingService.processLayer(rawLayer, MethodTypes.PointsDeterminationMethodType.EVENLY_DISTRIBUTED, 2.5))
                .map(layer -> layer.getPoints())
                .flatMap(Collection::stream)
                .collect(Collectors.toList());
    }



    @GetMapping("/layers")
    private ResponseEntity<List<Layer>> getLayers() {
        List<String> layersToLoad = List.of(
                "/ct23a/ct23a_kidney_1-0.ctl",
                "/ct23a/ct23a_kidney_2-0.ctl",
                "/ct23a/ct23a_kidney_3-0.ctl",
                "/ct23a/ct23a_kidney_4-0.ctl",
                "/ct23a/ct23a_kidney_5-0.ctl",
                "/ct23a/ct23a_kidney_6-0.ctl",
                "/ct23a/ct23a_kidney_7-0.ctl",
                "/ct23a/ct23a_kidney_8-0.ctl",
                "/ct23a/ct23a_kidney_9-0.ctl",
                "/ct23a/ct23a_kidney_10-0.ctl",
                "/ct23a/ct23a_kidney_11-0.ctl",
                "/ct23a/ct23a_kidney_12-0.ctl");
        List<Layer> layers = kidneyProcessingService.getKidneyLayers(layersToLoad,
                MethodTypes.KidneyVisualisationMethodType.TRIANGULATION, 2.5);
        return ResponseEntity.ok(layers);
    }

    @GetMapping("/triangles")
    private ResponseEntity<List<Triangle>> triangleTest() {

        List<String> layersToLoad = List.of(
                "/ct23a/ct23a_kidney_1-0.ctl",
                "/ct23a/ct23a_kidney_2-0.ctl",
                "/ct23a/ct23a_kidney_3-0.ctl",
                "/ct23a/ct23a_kidney_4-0.ctl",
                "/ct23a/ct23a_kidney_5-0.ctl",
                "/ct23a/ct23a_kidney_6-0.ctl",
                "/ct23a/ct23a_kidney_7-0.ctl",
                "/ct23a/ct23a_kidney_8-0.ctl",
                "/ct23a/ct23a_kidney_9-0.ctl",
                "/ct23a/ct23a_kidney_10-0.ctl",
                "/ct23a/ct23a_kidney_11-0.ctl",
                "/ct23a/ct23a_kidney_12-0.ctl");

        List<Layer> layers = kidneyProcessingService.getKidneyLayers(layersToLoad,
                MethodTypes.KidneyVisualisationMethodType.TRIANGULATION, 0.5);
        List<Triangle> triangles = new ArrayList<>();

        for(int i=layers.size()-1; i>0; i--) {
            triangles.addAll(triangulation.getTrianglesBetweenLayers(layers.get(i), layers.get(i-1)));
        }

        return ResponseEntity.ok(triangles);
    }

    /***
     * TRIANGULACJA Z WRZUCONYCH PLIKÓW
     * NIE BĘDZIE DZIAŁAĆ PRAWIDŁOWO W PRZYPADKU WRZUCENIA WIELU PLIKÓW DLA JEDNEJ WARSTWY NP. kidney_10-0.ctl i kidney_10-1.ctl
     * DZIAŁA TYLKO DLA PLIKÓW Z NERKAMI, BEZ RAKA
     * JEŻELI KSZTAŁT NERKI JEST BARDZO NIEREGULARNY, MOGĄ POJAWIAĆ SIĘ BŁĘDY PRZY PRZETWARZANIU
     ***/

    @PostMapping(value = "/trianglesFromFiles", consumes = MediaType.MULTIPART_FORM_DATA_VALUE)
    private ResponseEntity<List<Triangle>> trianglesFromFiles(@RequestParam("files") MultipartFile[] files) {
        List<Layer> layers = kidneyProcessingService.getKidneyLayers(files,
                MethodTypes.KidneyVisualisationMethodType.TRIANGULATION, 5.0);
        List<Triangle> triangles = new ArrayList<>();

        for(int i=layers.size()-1; i>0; i--) {
            triangles.addAll(triangulation.getTrianglesBetweenLayers(layers.get(i), layers.get(i-1)));
        }

        return ResponseEntity.ok(triangles);
    }


    @GetMapping(value = "/splines")
    private List<LayerPoint> testSplines() {
        // dane z plików .mat
        String[] splineLayer1X = "3374.91522140110\t3407.00928489603\t3449.80136955593\t3487.24444363335\t3535.38553887574\t3567.47960237067\t3587.09264117313\t3613.83769408557\t3633.45073288802\t3658.41278227297\t3661.97878932796\t3663.76179285546\t3667.32779991045\t3663.76179285546\t3651.28076816298\t3638.79974347051\t3626.31871877804\t3606.70567997558\t3594.22465528311\t3574.61161648065\t3563.91359531568\t3554.99857767820\t3538.95154593073\t3517.55550360078\t3492.59345421584\t3472.98041541338\t3439.10334839096\t3408.79228842352\t3376.69822492860\t3337.47214732368\t3316.07610499373\t3300.02907324627\t3292.89705913628\t3267.93500975134\t3244.75596389389\t3234.05794272892\t3223.35992156394\t3210.87889687147\t3201.96387923399\t3194.83186512400\t3191.26585806901\t3185.91684748652\t3171.65281926655\t3166.30380868407\t3157.38879104659\t3168.08681221156\t3189.48285454151\t3212.66190039896\t3239.40695331140\t3264.36900269635\t3287.54804855380\t3307.16108735625\t3374.91522140110".split("\t");
        String[] splineLayer1Y = "1837.62935282490\t1837.62935282490\t1841.19535987989\t1841.19535987989\t1844.76136693488\t1835.84634929740\t1837.62935282490\t1846.54437046238\t1850.11037751737\t1866.15740926484\t1882.20444101230\t1907.16649039725\t1933.91154330969\t1960.65659622213\t1980.26963502458\t1996.31666677205\t2007.01468793702\t2021.27871615699\t2024.84472321198\t2040.89175495945\t2060.50479376190\t2074.76882198187\t2087.24984667434\t2099.73087136682\t2110.42889253179\t2117.56090664178\t2119.34391016927\t2121.12691369677\t2122.90991722426\t2122.90991722426\t2119.34391016927\t2144.30595955422\t2151.43797366420\t2153.22097719170\t2149.65497013670\t2142.52295602672\t2121.12691369677\t2101.51387489431\t2096.16486431182\t2081.90083609186\t2071.20281492688\t2046.24076554193\t2024.84472321198\t1999.88267382704\t1969.57161385961\t1942.82656094717\t1928.56253272720\t1914.29850450723\t1900.03447628726\t1892.90246217728\t1875.07242690232\t1855.45938809986\t1837.62935282490".split("\t");
        String[] translation1 = "371.428000000000,-442.446000000000,0".split(",");

        String[] splineLayer2X = "2926.43066443259\t2976.89344925685\t3027.35623408110\t3074.12662001578\t3112.28140854143\t3138.12820076849\t3163.97499299554\t3197.20658300176\t3229.20737337811\t3267.36216190377\t3307.97854968914\t3348.59493747452\t3383.05732711059\t3413.82731785709\t3440.90490971401\t3454.44370564246\t3461.82850342162\t3465.52090231120\t3465.52090231120\t3456.90530490218\t3453.21290601260\t3435.98171119457\t3432.28931230499\t3413.82731785709\t3389.21132525989\t3368.28773155228\t3341.21013969536\t3320.28654598774\t3303.05535116970\t3272.28536042321\t3245.20776856629\t3209.51457930036\t3172.59059040456\t3139.35900039835\t3093.81941409353\t3050.74142704844\t3000.27864222418\t2983.04744740615\t2955.96985554923\t2928.89226369231\t2894.42987405624\t2858.73668479030\t2811.96629885563\t2768.88831181054\t2736.88752143418\t2702.42513179810\t2680.27073846063\t2654.42394623357\t2633.50035252595\t2603.96116140932\t2592.88396474058\t2579.34516881212\t2569.49877177324\t2562.11397399408\t2562.11397399408\t2573.19117066282\t2587.96076622114\t2602.73036177946\t2623.65395548708\t2642.11594993497\t2660.57794438287\t2688.88633586965\t2712.27152883698\t2739.34912069390\t2779.96550847927\t2808.27389996605\t2832.88989256325\t2847.65948812157\t2926.43066443259".split("\t");
        String[] splineLayer2Y = "1249.84516769049\t1239.99877065161\t1237.53717139189\t1235.07557213217\t1227.69077435301\t1225.22917509329\t1232.61397287245\t1249.84516769049\t1262.15316398909\t1284.30755732656\t1308.92354992376\t1342.15513992998\t1379.07912882577\t1411.07991920213\t1449.23470772778\t1487.38949625344\t1524.31348514923\t1555.08347589573\t1585.85346664222\t1627.70065405746\t1656.00904554424\t1691.70223481017\t1711.39502888793\t1720.01062629695\t1732.31862259555\t1742.16501963442\t1754.47301593302\t1768.01181186148\t1776.62740927050\t1785.24300667952\t1797.55100297812\t1806.16660038714\t1813.55139816629\t1819.70539631559\t1819.70539631559\t1819.70539631559\t1806.16660038714\t1784.01220704966\t1761.85781371218\t1744.62661889414\t1727.39542407611\t1713.85662814765\t1706.47183036849\t1702.77943147891\t1696.62543332961\t1679.39423851157\t1664.62464295325\t1651.08584702480\t1636.31625146648\t1608.00785997970\t1590.77666516166\t1568.62227182419\t1536.62148144783\t1502.15909181176\t1456.61950550694\t1434.46511216946\t1400.00272253339\t1379.07912882577\t1365.54033289731\t1353.23233659872\t1345.84753881956\t1332.30874289110\t1320.00074659250\t1307.69275029390\t1300.30795251474\t1287.99995621614\t1284.30755732656\t1281.84595806685\t1249.84516769049".split("\t");
        String[] translation2 = "177.776000000000,101.439000000000,6.29640000000001".split(",");

        String[] splineLayer3X = "2559.65237473436\t2596.57636363016\t2626.11555474679\t2653.19314660371\t2676.57833957105\t2704.88673105782\t2738.11832106404\t2766.42671255082\t2809.50469959591\t2856.27508553058\t2891.96827479652\t2920.27666628330\t2949.81585739993\t2997.81704296447\t3033.51023223040\t3056.89542519774\t3091.35781483381\t3119.66620632059\t3141.82059965807\t3173.82139003442\t3207.05298004064\t3239.05377041699\t3261.20816375447\t3289.51655524125\t3325.20974450718\t3354.74893562382\t3373.21093007172\t3394.13452377933\t3410.13491896751\t3431.05851267513\t3445.82810823345\t3459.36690416190\t3469.21330120078\t3472.90570009036\t3474.13649972022\t3474.13649972022\t3470.44410083064\t3459.36690416190\t3448.28970749317\t3433.52011193485\t3416.28891711681\t3400.28852192863\t3380.59572785087\t3362.13373340298\t3346.13333821480\t3335.05614154606\t3321.51734561760\t3287.05495598153\t3264.90056264405\t3234.13057189755\t3214.43777781980\t3187.36018596288\t3166.43659225526\t3144.28219891779\t3117.20460706087\t3095.05021372339\t3066.74182223662\t3040.89503000956\t3007.66344000334\t2978.12424888671\t2951.04665702979\t2920.27666628330\t2888.27587590694\t2846.42868849171\t2816.88949737507\t2784.88870699871\t2754.11871625222\t2727.04112439530\t2699.96353253838\t2669.19354179189\t2643.34674956483\t2616.26915770792\t2586.72996659128\t2554.72917621492\t2533.80558250731\t2517.80518731913\t2490.72759546221\t2464.88080323516\t2435.34161211852\t2409.49481989146\t2389.80202581371\t2368.87843210609\t2347.95483839847\t2335.64684209987\t2324.56964543113\t2320.87724654156\t2317.18484765198\t2317.18484765198\t2324.56964543113\t2330.72364358043\t2343.03163987903\t2352.87803691791\t2367.64763247623\t2386.10962692413\t2405.80242100188\t2424.26441544978\t2442.72640989768\t2468.57320212474\t2494.41999435179\t2511.65118916983\t2559.65237473436".split("\t");
        String[] splineLayer3Y = "1268.30716213839\t1253.53756658007\t1243.69116954119\t1237.53717139189\t1233.84477250231\t1226.45997472315\t1222.76757583357\t1222.76757583357\t1222.76757583357\t1225.22917509329\t1219.07517694399\t1219.07517694399\t1223.99837546343\t1226.45997472315\t1228.92157398287\t1233.84477250231\t1243.69116954119\t1252.30676695021\t1258.46076509951\t1270.76876139811\t1286.76915658628\t1300.30795251474\t1317.53914733278\t1336.00114178068\t1365.54033289731\t1386.46392660493\t1407.38752031255\t1430.77271327989\t1460.31190439652\t1487.38949625344\t1519.39028662979\t1548.92947774643\t1579.69946849293\t1617.85425701858\t1656.00904554424\t1683.08663740115\t1704.01023110877\t1726.16462444625\t1739.70342037470\t1759.39621445246\t1779.08900853022\t1796.32020334826\t1816.01299742601\t1833.24419224405\t1859.09098447111\t1883.70697706831\t1905.86137040578\t1921.86176559396\t1925.55416448354\t1930.47736300298\t1944.01615893144\t1947.70855782102\t1957.55495485990\t1957.55495485990\t1957.55495485990\t1955.09335560018\t1953.86255597032\t1957.55495485990\t1957.55495485990\t1957.55495485990\t1957.55495485990\t1957.55495485990\t1955.09335560018\t1950.17015708074\t1942.78535930158\t1932.93896226270\t1925.55416448354\t1913.24616818494\t1899.70737225648\t1886.16857632803\t1873.86058002943\t1865.24498262041\t1855.39858558153\t1841.85978965307\t1834.47499187391\t1830.78259298433\t1828.32099372461\t1828.32099372461\t1816.01299742601\t1800.01260223784\t1775.39660964064\t1759.39621445246\t1733.54942222541\t1705.24103073863\t1672.00944073241\t1640.00865035606\t1606.77706034984\t1571.08387108391\t1539.08308070755\t1514.46708811035\t1483.69709736386\t1460.31190439652\t1433.23431253961\t1414.77231809171\t1398.77192290353\t1380.30992845563\t1358.15553511816\t1332.30874289110\t1317.53914733278\t1302.76955177446\t1268.30716213839".split("\t");
        String[] translation3 = "-133.332000000000,62.5889999999999,0".split(",");

        String[] splineLayer4X = "2825.50509478409\t2853.81348627086\t2889.50667553680\t2919.04586665344\t2955.96985554923\t2987.97064592559\t3028.58703371096\t3066.74182223662\t3103.66581113241\t3133.20500224905\t3163.97499299554\t3209.51457930036\t3247.66936782601\t3277.20855894265\t3305.51695042942\t3328.90214339676\t3358.44133451340\t3384.28812674045\t3421.21211563625\t3444.59730860359\t3470.44410083064\t3492.59849416812\t3515.98368713546\t3538.13808047293\t3556.60007492083\t3575.06206936873\t3602.13966122565\t3630.44805271242\t3648.91004716032\t3673.52603975752\t3698.14203235471\t3722.75802495191\t3733.83522162065\t3733.83522162065\t3728.91202310121\t3723.98882458177\t3717.83482643247\t3711.68082828317\t3699.37283198457\t3678.44923827696\t3658.75644419920\t3639.06365012144\t3614.44765752424\t3594.75486344649\t3571.36967047915\t3549.21527714167\t3514.75288750560\t3496.29089305770\t3472.90570009036\t3453.21290601260\t3411.36571859737\t3380.59572785087\t3344.90253858494\t3319.05574635788\t3274.74695968293\t3246.43856819615\t3203.36058115106\t3172.59059040456\t3141.82059965807\t3106.12741039213\t3074.12662001578\t3045.81822852900\t3013.81743815264\t2976.89344925685\t2960.89305406867\t2936.27706147147\t2906.73787035484\t2873.50628034862\t2846.42868849171\t2821.81269589451\t2799.65830255703\t2776.27310958969\t2749.19551773278\t2720.88712624600\t2690.11713549951\t2661.80874401273\t2640.88515030511\t2615.03835807806\t2594.11476437044\t2563.34477362394\t2536.26718176703\t2520.26678657885\t2498.11239324137\t2487.03519657263\t2478.41959916361\t2466.11160286502\t2448.88040804698\t2431.64921322894\t2410.72561952132\t2398.41762322272\t2393.49442470329\t2393.49442470329\t2398.41762322272\t2404.57162137202\t2418.11041730048\t2416.87961767062\t2414.41801841090\t2410.72561952132\t2413.18721878104\t2427.95681433936\t2440.26481063796\t2455.03440619628\t2467.34240249488\t2484.57359731291\t2510.42038953997\t2528.88238398787\t2560.88317436422\t2585.49916696142\t2612.57675881834\t2642.11594993497\t2667.96274216203\t2693.80953438909\t2717.19472735642\t2744.27231921334\t2763.96511329110\t2825.50509478409".split("\t");
        String[] splineLayer4Y = "1242.46036991133\t1244.92196917105\t1248.61436806063\t1249.84516769049\t1257.22996546965\t1260.92236435923\t1263.38396361895\t1265.84556287867\t1270.76876139811\t1274.46116028769\t1281.84595806685\t1290.46155547586\t1297.84635325502\t1305.23115103418\t1315.07754807306\t1324.92394511194\t1333.53954252096\t1345.84753881956\t1374.15593030633\t1397.54112327367\t1417.23391735143\t1436.92671142918\t1461.54270402638\t1483.69709736386\t1512.00548885063\t1526.77508440895\t1545.23707885685\t1556.31427552559\t1569.85307145405\t1588.31506590194\t1606.77706034984\t1628.93145368732\t1657.23984517410\t1686.77903629073\t1712.62582851779\t1742.16501963442\t1763.08861334204\t1787.70460593924\t1809.85899927672\t1844.32138891279\t1866.47578225027\t1889.86097521760\t1915.70776744466\t1936.63136115228\t1961.24735374948\t1982.17094745709\t2008.01773968415\t2024.01813487233\t2044.94172857994\t2057.24972487854\t2065.86532228756\t2076.94251895630\t2088.01971562504\t2100.32771192364\t2106.48171007294\t2117.55890674167\t2121.25130563125\t2118.78970637153\t2121.25130563125\t2121.25130563125\t2113.86650785210\t2104.02011081322\t2095.40451340420\t2080.63491784588\t2075.71171932644\t2064.63452265770\t2056.01892524868\t2038.78773043064\t2024.01813487233\t2010.47933894387\t1999.40214227513\t1987.09414597653\t1979.70934819737\t1972.32455041821\t1960.01655411962\t1951.40095671060\t1941.55455967172\t1937.86216078214\t1936.63136115228\t1926.78496411340\t1912.01536855508\t1896.01497336690\t1878.78377854887\t1854.16778595167\t1834.47499187391\t1819.70539631559\t1800.01260223784\t1790.16620519896\t1770.47341112120\t1755.70381556288\t1733.54942222541\t1715.08742777751\t1692.93303444003\t1676.93263925185\t1658.47064480396\t1635.08545183662\t1605.54626071998\t1571.08387108391\t1542.77547959713\t1513.23628848049\t1483.69709736386\t1457.85030513680\t1435.69591179932\t1413.54151846185\t1391.38712512437\t1371.69433104661\t1344.61673918970\t1323.69314548208\t1310.15434955362\t1291.69235510572\t1281.84595806685\t1268.30716213839\t1260.92236435923\t1255.99916583979\t1247.38356843077\t1242.46036991133".split("\t");
        String[] translation4 = "149.208000000000,127.338000000000,7.03720000000001".split(",");

        List<LayerPoint> splinePoints = new ArrayList<>();

        for (int i=0; i<splineLayer1X.length; i++) {
            splinePoints.add(new LayerPoint(
                    Double.valueOf(splineLayer1X[i]).intValue()+Double.valueOf(translation1[0]).intValue(),
                    Double.valueOf(splineLayer1Y[i]).intValue()+Double.valueOf(translation1[1]).intValue(),
                    200+Double.valueOf(translation1[2]).intValue()));
        }

        for (int i=0; i<splineLayer2X.length; i++) {
            splinePoints.add(new LayerPoint(
                    Double.valueOf(splineLayer2X[i]).intValue()+Double.valueOf(translation2[0]).intValue(),
                    Double.valueOf(splineLayer2Y[i]).intValue()+Double.valueOf(translation2[1]).intValue(),
                    400+Double.valueOf(translation2[2]).intValue()));
        }

        for (int i=0; i<splineLayer3X.length; i++) {
            splinePoints.add(new LayerPoint(
                    Double.valueOf(splineLayer3X[i]).intValue()+Double.valueOf(translation3[0]).intValue(),
                    Double.valueOf(splineLayer3Y[i]).intValue()+Double.valueOf(translation3[1]).intValue(),
                    600+Double.valueOf(translation3[2]).intValue()));
        }

        for (int i=0; i<splineLayer4X.length; i++) {
            splinePoints.add(new LayerPoint(
                    Double.valueOf(splineLayer4X[i]).intValue()+Double.valueOf(translation4[0]).intValue(),
                    Double.valueOf(splineLayer4Y[i]).intValue()+Double.valueOf(translation4[1]).intValue(),
                    800+Double.valueOf(translation4[2]).intValue()));
        }

        return splinePoints;

    }
}
